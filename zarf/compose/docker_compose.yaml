services:
  database:
    image: postgres:17.4
    container_name: database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./database-data:/var/lib/postgresql/data
      - ./pg_hba.conf:/etc/pg_hba.conf
    command: [ '-c', 'hba_file=/etc/pg_hba.conf' ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    cpu_count: 2
    networks:
      pwmanager-system-network:
        ipv4_address: 10.5.0.2

  init-migrate-seed:
    image: localhost/gradientsearch/pwmanager:0.0.1
    pull_policy: never
    container_name: init-migrate-seed
    restart: unless-stopped
    entrypoint: ['./admin', 'migrate-seed']
    environment:
      - PWMANAGERS_DB_USER=postgres
      - PWMANAGERS_DB_PASSWORD=postgres
      - PWMANAGERS_DB_HOST=database
      - PWMANAGERS_DB_DISABLE_TLS=true
    networks:
      pwmanager-system-network:
        ipv4_address: 10.5.0.10
    deploy:
      restart_policy:
        condition: none
    depends_on:
      - database

  auth:
    image: localhost/gradientsearch/auth:0.0.1
    pull_policy: never
    container_name: auth
    restart: unless-stopped
    ports:
      - "6000:6000"
      - "6010:6010"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:6000/v1/liveness || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 2s
    cpu_count: 2
    environment:
      - GOMAXPROCS=2
      - AUTH_DB_USER=postgres
      - AUTH_DB_PASSWORD=postgres
      - AUTH_DB_HOST=database
      - AUTH_DB_DISABLE_TLS=true
      - KUBERNETES_NAMESPACE=compose
      - KUBERNETES_NAME=pwmanager-system
      - KUBERNETES_POD_IP=10.5.0.5
      - KUBERNETES_NODE_NAME=auth
    expose:
      - "6000:6000"
      - "6010:6010"
    networks:
      pwmanager-system-network:
        ipv4_address: 10.5.0.5
    depends_on:
      - database

  pwmanager:
    image: localhost/gradientsearch/pwmanager:0.0.1
    pull_policy: never
    container_name: pwmanager
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "3010:3010"
    environment:
      - GOMAXPROCS
      - GOGC=off
      - GOMEMLIMIT
      - PWMANAGERS_DB_USER=postgres
      - PWMANAGERS_DB_PASSWORD=postgres
      - PWMANAGERS_DB_HOST=database
      - PWMANAGERS_DB_DISABLE_TLS=true
      - PWMANAGERS_AUTH_HOST=http://auth:6000
      - KUBERNETES_NAMESPACE
      - KUBERNETES_NAME
      - KUBERNETES_POD_IP
      - KUBERNETES_NODE_NAME
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/v1/liveness || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 2s
    networks:
      pwmanager-system-network:
        ipv4_address: 10.5.0.15
    depends_on:
      - init-migrate-seed

  metrics:
    image: localhost/gradientsearch/metrics:0.0.1
    pull_policy: never
    container_name: metrics
    restart: unless-stopped
    ports:
      - "4000:4000"
      - "4010:4010"
      - "4020:4020"
    cpus: 1
    environment:
      - GOMAXPROCS=1
      - METRICS_COLLECT_FROM=http://pwmanager:3010/debug/vars
    networks:
      pwmanager-system-network:
        ipv4_address: 10.5.0.20
    depends_on:
      - pwmanager

volumes:
  database: {}

networks:
  pwmanager-system-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24
